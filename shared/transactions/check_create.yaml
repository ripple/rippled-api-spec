components:
  schemas:
    CheckCreateTransaction:
      $id: CheckCreateTransaction
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      type: object
      description: |
        Create a Check object in the ledger, which is a deferred payment that can be cashed by its
        intended destination. The sender of this transaction is the sender of the Check.
      required:
        - Destination
        - SendMax
      properties:
        Destination:
          type: string
          description: |
            The unique address of the account that can cash the Check.
        SendMax:
          $ref: '../base.yaml#/components/schemas/CurrencyAmount'
          description: |
            Maximum amount of source currency the Check is allowed to debit the sender, including transfer
            fees on non-XRP currencies. The Check can only credit the destination with the same currency
            (from the same issuer, for non-XRP currencies). For non-XRP amounts, the nested field names
            MUST be lower-case.
        DestinationTag:
          type: integer
          format: uint32
          description: |
            (Optional) Arbitrary tag that identifies the reason for the Check, or a hosted recipient to pay.
        Expiration:
          type: integer
          format: uint32
          description: |
            (Optional) Time after which the Check is no longer valid, in seconds since the Ripple Epoch.
        InvoiceID:
          type: string
          format: hash256
          description: |
            (Optional) Arbitrary 256-bit hash representing a specific reason or identifier for this Check.
    CheckCreateErrorCode:
      $id: CheckCreateErrorCode
      type: string
      enum:
        - tecNO_PERMISSION
        - temREDUNDANT
        - tecNO_DST
        - tecDST_TAG_NEEDED
        - tecFROZEN
        - tecEXPIRED
        - tecINSUFFICIENT_RESERVE
        - tecDIR_FULL
      description: Enum representing possible error codes for CheckCreate transactions.
      x-enum-descriptions:
        tecNO_PERMISSION: If the Destination account is blocking incoming Checks, the transaction fails. (Requires the DisallowIncoming amendment)
        temREDUNDANT: If the Destination is the sender of the transaction, the transaction fails.
        tecNO_DST: If the Destination account does not exist in the ledger, the transaction fails.
        tecDST_TAG_NEEDED: If the Destination account has the RequireDest flag enabled but the transaction does not include a DestinationTag field, the transaction fails.
        tecFROZEN: If SendMax specifies a token which is frozen, the transaction fails.
        tecEXPIRED: If the Expiration of the transaction is in the past, the transaction fails.
        tecINSUFFICIENT_RESERVE: If the sender does not have enough XRP to meet the owner reserve after adding the Check, the transaction fails.
        tecDIR_FULL: If either the sender or the destination of the Check cannot own more objects in the ledger, the transaction fails.
