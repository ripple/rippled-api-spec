components:
  schemas:
    CheckCashTransaction:
      $id: CheckCashTransaction
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      type: object
      description: |
        Attempts to redeem a Check object in the ledger to receive up to the amount authorized by the
        corresponding CheckCreate transaction. Only the Destination address of a Check can cash it with a
        CheckCash transaction. Cashing a check this way is similar to executing a Payment initiated by the
        destination.

        Since the funds for a check are not guaranteed, redeeming a Check can fail because the sender does
        not have a high enough balance or because there is not enough liquidity to deliver the funds. If
        this happens, the Check remains in the ledger and the destination can try to cash it again later,
        or for a different amount.
      required:
        - CheckID
      properties:
        CheckID:
          type: string
          format: hash256
          description: |
            The ID of the Check ledger object to cash, as a 64-character hexadecimal string.
        Amount:
          description: |
            (Optional) Redeem the Check for exactly this amount, if possible. The currency must match that
            of the SendMax of the corresponding CheckCreate transaction. You must provide either this field
            or DeliverMin.
          oneOf:
            - type: string
              description: 'The amount of XRP (drops), represented as a string.'
              x-custom-validation:
                isNumericString: true
            - $ref: '../base.yaml#/components/schemas/TokenAmount'
        DeliverMin:
          description: |
            (Optional) Redeem the Check for at least this amount and for as much as possible. The currency
            must match that of the SendMax of the corresponding CheckCreate transaction. You must provide
            either this field or Amount.
          oneOf:
            - type: string
              description: 'The amount of XRP (drops), represented as a string.'
              x-custom-validation:
                isNumericString: true
            - $ref: '../base.yaml#/components/schemas/TokenAmount'
      x-custom-validation:
        mutualExclusion:
          - field1: Amount
            field2: DeliverMin

    CheckCashErrorCode:
      $id: CheckCashErrorCode
      type: integer
      format: uint32
      description: Enum representing possible error codes for CheckCash transactions.
      enum:
        - 139
        - 140
        - 148
        - 143
        - -299
        - -297
      x-enum-varnames:
        - tecNO_PERMISSION
        - tecNO_ENTRY
        - tecEXPIRED
        - tecDST_TAG_NEEDED
        - temMALFORMED
        - temBAD_CURRENCY
      x-enum-descriptions:
        - If the sender of the CheckCash transaction is not the Destination of the check, the transaction fails.
        - If the Check identified by the CheckID field does not exist, the transaction fails.
        - If the Check identified by the CheckID field has already expired, the transaction fails.
        - If the destination of the Check has the RequireDest flag enabled but the Check, as created, does not have a destination tag, the transaction fails.
        - If the transaction specifies both Amount and DeliverMin, or omits both, the transaction fails.
        - If the Amount or DeliverMin does not match the currency (and issuer, if not XRP) of the Check, the transaction fails.
