components:
  schemas:
    AccountDeleteTransaction:
      $id: AccountDeleteTransaction
      type: object
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      description: |
        An AccountDelete transaction deletes an account and any objects it owns in the XRP Ledger,
        if possible, sending the account's remaining XRP to a specified destination account.
      properties:
        CredentialIDs:
          type: array
          items:
            type: string
          description: |
            (Optional) Set of Credentials to authorize a deposit made by this transaction. Each member
            of the array must be the ledger entry ID of a Credential entry in the ledger. For details,
            see Credential IDs.
        Destination:
          type: string
          description: |
            (Required) The address of an account to receive any leftover XRP after deleting the sending
            account. Must be a funded account in the ledger, and must not be the sending account.
        DestinationTag:
          type: integer
          format: uint32
          description: |
            (Optional) Arbitrary destination tag that identifies a hosted recipient or other information
            for the recipient of the deleted account's leftover XRP.
      required:
        - Destination
      x-custom-validation:
        validCredentials:
          field: CredentialIDs
    AccountDeleteErrorCode:
      $id: AccountDeleteErrorCode
      type: string
      enum:
        - temDISABLED
        - temDST_IS_SRC
        - tecDST_TAG_NEEDED
        - tecNO_DST
        - tecNO_PERMISSION
        - tecTOO_SOON
        - tecHAS_OBLIGATIONS
        - tefTOO_BIG
      description: Enum representing possible error codes for AccountDelete transactions.
      x-enum-descriptions:
        temDISABLED: Occurs if the DeletableAccounts amendment is not enabled.
        temDST_IS_SRC: Occurs if the Destination matches the sender of the transaction (Account field).
        tecDST_TAG_NEEDED: Occurs if the Destination account requires a destination tag, but the DestinationTag field was not provided.
        tecNO_DST: Occurs if the Destination account is not a funded account in the ledger.
        tecNO_PERMISSION: Occurs if the Destination account requires deposit authorization and the sender is not preauthorized.
        tecTOO_SOON: Occurs if the sender's Sequence number is too high. The transaction's Sequence number plus 256 must be less than the current Ledger Index. This prevents replay of old transactions if this account is resurrected after it is deleted.
        tecHAS_OBLIGATIONS: Occurs if the account to be deleted is connected to objects that cannot be deleted in the ledger. (This includes objects created by other accounts, such as escrows and for example NFT's minted, even if owned by another account.)
        tefTOO_BIG: Occurs if the sending account is linked to more than 1000 objects in the ledger. The transaction could succeed on retry if some of those objects were deleted separately first.
