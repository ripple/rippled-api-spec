components:
  schemas:
    AMMBidTransaction:
      $id: AMMBidTransaction
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      type: object
      required:
        - Asset
        - Asset2
      properties:
        Asset:
          $ref: '../base.yaml#/components/schemas/CurrencyAmount'
          description: |
            (Required) The definition for one of the assets in the AMM's pool. In JSON, this is an object
            with currency and issuer fields (omit issuer for XRP).
        Asset2:
          $ref: '../base.yaml#/components/schemas/CurrencyAmount'
          description: |
            (Required) The definition for the other asset in the AMM's pool. In JSON, this is an object
            with currency and issuer fields (omit issuer for XRP).
        BidMin:
          $ref: '../base.yaml#/components/schemas/TokenAmount'
          description: |
            (Optional) Pay at least this amount for the slot. Setting this value higher makes it harder
            for others to outbid you. If omitted, pay the minimum necessary to win the bid.
        BidMax:
          type: object
          description: |
            (Optional) Pay at most this amount for the slot. If the cost to win the bid is higher than this
            amount, the transaction fails. If omitted, pay as much as necessary to win the bid.
        AuthAccounts:
          type: array
          description: |
            (Optional) A list of up to 4 additional accounts that you allow to trade at the discounted fee.
            This cannot include the address of the transaction sender. Each of these objects should be an
            Auth Account object.
          maxItems: 4
          items:
            $ref: '#/components/schemas/AuthAccount'
    AuthAccount:
      $id: AuthAccount
      type: object
      required:
        - Account
      properties:
        Account:
          type: string
          description: |
            (Required) The address of the account to authorize.

    AMMBidErrorCode:
      $id: AMMBidErrorCodes
      type: string
      enum:
        - tecAMM_EMPTY
        - tecAMM_FAILED
        - tecAMM_INVALID_TOKENS
        - temBAD_AMM_TOKENS
        - temDISABLED
        - temMALFORMED
        - terNO_ACCOUNT
        - terNO_AMM
      description: Enum representing possible error codes for AMMBid transactions.
      x-enum-descriptions:
        tecAMM_EMPTY: The AMM has no assets in its pool. In this state, you can only delete the AMM or fund it with a new deposit.
        tecAMM_FAILED: This transaction could not win the auction, either because the sender does not hold enough LP Tokens to pay the necessary bid or because the price to win the auction was higher than the transaction's specified BidMax value.
        tecAMM_INVALID_TOKENS: The sender of this transaction does not hold enough LP Tokens to meet the slot price.
        temBAD_AMM_TOKENS: The specified BidMin or BidMax were not specified as the correct LP Tokens for this AMM.
        temDISABLED: The AMM feature is not enabled on this network.
        temMALFORMED: The transaction specified invalid options, such as a list of AuthAccounts that is too long.
        terNO_ACCOUNT: One of the accounts specified in this request do not exist.
        terNO_AMM: The Automated Market Maker instance for the asset pair in this transaction does not exist.
