components:
  schemas:
    MPTokenAuthorizeTransaction:
      $id: MPTokenAuthorizeTransaction
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      type: object
      description: |
        This transaction enables an account to hold an amount of a particular MPT issuance. When applied
        successfully, it creates a new MPToken object with an initial zero balance, owned by the holder account.

        If the issuer has set lsfMPTRequireAuth (allow-listing) on the MPTokenIssuance, the issuer must submit an
        MPTokenAuthorize transaction as well in order to give permission to the holder. If lsfMPTRequireAuth is not
        set and the issuer attempts to submit this transaction, it will fail.
      required:
        - MPTokenIssuanceID
      properties:
        MPTokenIssuanceID:
          type: string
          format: uint192
          description: |
            Indicates the ID of the MPT involved.
        Holder:
          type: string
          description: |
            (Optional) Specifies the holder's address that the issuer wants to authorize. Only used for
            authorization/allow-listing; must be empty if submitted by the holder.
    MPTokenAuthorizeFlag:
      $id: MPTokenAuthorizeFlag
      type: string
      enum:
        - tfMPTUnauthorize: 0x00000001
      description: Enum representing flags for MPTokenAuthorize transactions.
      x-enum-descriptions:
        tfMPTUnauthorize: |
          If set, and transaction is submitted by a holder, it indicates that the holder no longer wants to
          hold the MPToken, which will be deleted as a result. If the holder's MPToken has a non-zero balance
          while trying to set this flag, the transaction fails. On the other hand, if set, and transaction is
          submitted by an issuer, it would mean that the issuer wants to unauthorize the holder (only applicable
          for allow-listing), which would unset the lsfMPTAuthorized flag on the MPToken.
