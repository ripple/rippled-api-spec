components:
  schemas:
    CredentialDeleteTransaction:
      $id: CredentialDeleteTransaction
      allOf:
        - $ref: '../base.yaml#/components/schemas/BaseTransaction'
      type: object
      description: >
        A CredentialDelete transaction removes a credential from the ledger, effectively revoking it. 
        Users may also want to delete an unwanted credential to reduce their reserve requirement.
      required:
        - CredentialType
      properties:
        CredentialType:
          type: string
          format: hex
          minLength: 1
          maxLength: 128
          description: Arbitrary data defining the type of credential to delete. The minimum length is 1 byte and the maximum length is 256 bytes.
        Subject:
          type: string
          description: The subject of the credential to delete. If omitted, use the Account (sender of the transaction) as the subject of the credential.
        Issuer:
          type: string
          description: The issuer of the credential to delete. If omitted, use the Account (sender of the transaction) as the issuer of the credential.
      x-custom-validation:
        requireOneOf:
          - fields:
              - Subject
              - Issuer

    CredentialDeleteErrorCode:
      $id: CredentialDeleteErrorCode
      type: integer
      format: uint32
      description: Error codes for the CredentialDelete transaction.
      enum:
        - -273
        - -268
        - 139
        - 140
      x-enum-varnames:
        - temDISABLED
        - temINVALID_ACCOUNT_ID
        - tecNO_PERMISSION
        - tecNO_ENTRY
      x-enum-descriptions:
        - The related amendment is not enabled.
        - A provided Subject or Issuer field is invalid. For example, it contains ACCOUNT_ZERO.
        - The sender is neither the issuer nor subject of the credential, and the credential is not expired.
        - The specified credential does not exist in the ledger.
