components:
  schemas:
    ResponseWarning:
      type: object
      description: Used to share rate-limiting warnings or other potential issues with a request.
      properties:
        details:
          type: object
          additionalProperties:
            type: string
          description: Additional information about this warning. The contents vary depending on the type of warning.
        id:
          type: integer
          description: A unique numeric code for this warning message.
        message:
          type: string
          description: >
            A human-readable string describing the cause of this message.
            Do not write software that relies the contents of this message;
            use the id (and details, if applicable) to identify the warning instead.
      required:
        - id
        - message

    BaseRequest:
      type: object
      description: Information which could be included in every request sent to rippled
      properties:
        api_version:
          type: integer
          description: The API version to use. If omitted, uses version 1.

    BaseSuccessResponse:
      type: object
      description: Information which is included in every successful response from a request sent to rippled.
      properties:
        forwarded:
          type: boolean
          description: Indicates whether the request was forwarded.
        status:
          type: string
          description: The status of the response (e.g., 'success').
          enum:
            - success
        warning:
          type: string
          description: A specific warning type (e.g., 'load').
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ResponseWarning'
          description: An array of response warnings.
      required:
        - status

    LookupByLedgerRequest:
      type: object
      description: Additional information shared in requests which search for specific ledger data.
      properties:
        ledger_hash:
          type: string
          description: A 20-byte hex string for the ledger version to use.
        ledger_index:
          oneOf:
            - type: string
            - type: integer
          description: The ledger index of the ledger to use, or a shortcut string.

    WebsocketErrorFields:
      type: object
      properties:
        api_version:
          type: integer
          description: The api_version specified in the request, if any.

    UniversalErrorResponseCodes:
      enum:
        - amendmentBlocked
        - failedToForward
        - invalid_API_version
        - noClosed
        - noCurrent
        - noNetwork
        - tooBusy
        - unknownCmd
      description: >
        * `amendmentBlocked` - The server is amendment blocked and needs to be updated to the latest version to stay synced with the XRP Ledger network.
        * `failedToForward` - (Reporting Mode servers only) The server tried to forward this request to a P2P Mode server, but the connection failed.
        * `invalid_API_version` - The server does not support the API version number from the request.
        * `noClosed` - The server does not have a closed ledger, typically because it has not finished starting up.
        * `noCurrent` - The server does not know what the current ledger is, due to high load, network problems, validator failures, incorrect configuration, or some other problem.
        * `noNetwork` - The server is having trouble connecting to the rest of the XRP Ledger peer-to-peer network (and is not running in stand-alone mode).
        * `tooBusy` - The server is under too much load to do this command right now. Generally not returned if you are connected as an admin.
        * `unknownCmd` - The request does not contain a command that the rippled server recognizes.

    BaseTransaction:
      type: object
      required:
        - Account
        - TransactionType
      properties:
        Account:
          type: string
          description: The unique address of the account that initiated the transaction.
        TransactionType:
          type: string
          description: >
            The type of transaction. Valid transaction types include: Payment, OfferCreate, TrustSet, and many others.
        Fee:
          type: string
          description: Integer amount of XRP, in drops, to be destroyed as a cost for distributing this transaction to the network. Some transaction types have different minimum requirements. See Transaction Cost for details.
        Sequence:
          type: integer
          format: uint32
          description: The sequence number of the account sending the transaction. A transaction is only valid if the Sequence number is exactly 1 greater than the previous transaction from the same account. The special case 0 means the transaction is using a Ticket instead.
        AccountTxnID:
          type: string
          description: Hash value identifying another transaction. If provided, this transaction is only valid if the sending account's previously-sent transaction matches the provided hash.
        Flags:
          type: integer
          format: uint32
          description: Set of bit-flags for this transaction.
        LastLedgerSequence:
          type: integer
          format: uint32
          description: Highest ledger index this transaction can appear in. Specifying this field places a strict upper limit on how long the transaction can wait to be validated or rejected.
        Memos:
          type: array
          items:
            type: object
          description: Additional arbitrary information used to identify this transaction.
        NetworkID:
          type: integer
          format: uint32
          description: The network ID of the chain this transaction is intended for. MUST BE OMITTED for Mainnet and some test networks. REQUIRED on chains whose network ID is 1025 or higher.
        Signers:
          type: array
          items:
            type: object
          description: Array of objects that represent a multi-signature which authorizes this transaction.
        SourceTag:
          type: integer
          format: uint32
          description: Arbitrary integer used to identify the reason for this payment, or a sender on whose behalf this transaction is made.
        SigningPubKey:
          type: string
          description: Hex representation of the public key that corresponds to the private key used to sign this transaction. If an empty string, indicates a multi-signature is present in the Signers field instead.
        TicketSequence:
          type: integer
          format: uint32
          description: The sequence number of the ticket to use in place of a Sequence number. If this is provided, Sequence must be 0. Cannot be used with AccountTxnID.
        TxnSignature:
          type: string
          description: The signature that verifies this transaction as originating from the account it says it is from.

    CurrencyAmount:
      oneOf:
        - type: string
          description: 'The amount of XRP (drops), represented as a string.'
        - $ref: '#/components/schemas/TokenAmount'

    TokenAmount:
      type: object
      properties:
        currency:
          type: string
          description: 'Arbitrary currency code for the token. Cannot be XRP.'
        value:
          type: string
          pattern: '^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$'
          description: 'Quoted decimal representation of the amount of the token. This can include scientific notation, such as 1.23e11 meaning 123,000,000,000. Both e and E may be used. This can be negative when displaying balances, but negative values are disallowed in other contexts such as specifying how much to send.'
        issuer:
          type: string
          description: 'Generally, the account that issues this token. In special cases, this can refer to the account that holds the token instead (for example, in a Clawback transaction).'
