components:
  schemas:
    AccountInfoRequest:
      $id: AccountInfoRequest
      type: object
      description: >
        The account_info command retrieves information about an account, its activity, and its XRP balance.
        All information retrieved is relative to a particular version of the ledger.
        Returns an AccountInfoResponse.
      allOf:
        - $ref: '../../shared/requests/account_info.yaml#/components/schemas/AccountInfoRequest'
        - type: object
          properties:
            command:
              $ref: '../../shared/base.yaml#/components/schemas/CommandTypes'
            id:
              # Not specifying a type is how we express "any" value is acceptable
              description: 'A unique identifier for the request.'
      required:
        - command
        - id
      example:
        id: 2
        command: account_info
        account: rG1QQv2nh2gr7RCZ1P8YYcBUKCCN633jCn
        ledger_index: current
        queue: true

    AccountInfoResponseV1:
      $id: AccountInfoResponseV1
      type: object
      oneOf:
        - $ref: '#/components/schemas/AccountInfoSuccessResponseV1'
        - $ref: '#/components/schemas/AccountInfoErrorResponse'
      properties:
        # TODO: Decide if it's worth having these fields (id and type) here or better to just include them in both the BaseSuccess and BaseError objects for maintainability / readability.
        id:
          # Not specifying a type is how we express "any" value is acceptable
          description: 'A unique identifier for the request.'
        type:
          type: string
          description: The value response indicates a direct response to an API request. Asynchronous notifications use a different value such as `ledgerClosed` or `transaction`.
          enum:
            - response
      required:
        - id
        - type
      example:
        id: 5
        status: success
        type: response
        result:
          account_data:
            Account: 'rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn'
            Balance: '999999999960'
            Flags: 8388608
            LedgerEntryType: 'AccountRoot'
            OwnerCount: 0
            PreviousTxnID: '4294BEBE5B569A18C0A2702387C9B1E7146DC3A5850C1E87204951C6FDAA4C42'
            PreviousTxnLgrSeq: 3
            Sequence: 6
            index: '92FA6A9FC8EA6018D5D16532D7795C91BFB0831355BDFDA177E86C8BF997985F'
          ledger_current_index: 71766343
          queue_data:
            auth_change_queued: true
            highest_sequence: 10
            lowest_sequence: 6
            max_spend_drops_total: '500'
            transactions:
              - auth_change: false
                fee: '100'
                fee_level: '2560'
                max_spend_drops: '100'
                seq: 6
              # ... (trimmed for length) ...
              - LastLedgerSequence: 10
                auth_change: false
                fee: '100'
                fee_level: '2560'
                max_spend_drops: '100'
                seq: 10
            txn_count: 5
          validated: true

    AccountInfoResponseV2:
      $id: AccountInfoResponseV2
      type: object
      oneOf:
        - $ref: '#/components/schemas/AccountInfoSuccessResponseV2'
        - $ref: '#/components/schemas/AccountInfoErrorResponse'
      properties:
        # TODO: Decide if it's worth having these fields (id and type) here or better to just include them in both the BaseSuccess and BaseError objects for maintainability / readability.
        id:
          # Not specifying a type is how we express "any" value is acceptable
          description: 'A unique identifier for the request.'
        type:
          type: string
          description: The value response indicates a direct response to an API request. Asynchronous notifications use a different value such as `ledgerClosed` or `transaction`.
          enum:
            - response
      required:
        - id
        - type
      example:
        id: 5
        status: success
        type: response
        result:
          account_data:
            Account: 'rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn'
            Balance: '999999999960'
            Flags: 8388608
            LedgerEntryType: 'AccountRoot'
            OwnerCount: 0
            PreviousTxnID: '4294BEBE5B569A18C0A2702387C9B1E7146DC3A5850C1E87204951C6FDAA4C42'
            PreviousTxnLgrSeq: 3
            Sequence: 6
            index: '92FA6A9FC8EA6018D5D16532D7795C91BFB0831355BDFDA177E86C8BF997985F'
          ledger_current_index: 71766343
          queue_data:
            auth_change_queued: true
            highest_sequence: 10
            lowest_sequence: 6
            max_spend_drops_total: '500'
            transactions:
              - auth_change: false
                fee: '100'
                fee_level: '2560'
                max_spend_drops: '100'
                seq: 6
              # ... (trimmed for length) ...
              - LastLedgerSequence: 10
                auth_change: false
                fee: '100'
                fee_level: '2560'
                max_spend_drops: '100'
                seq: 10
            txn_count: 5
          validated: true

    AccountInfoErrorResponse:
      $id: AccountInfoErrorResponse
      oneOf:
        - $ref: '../../shared/base.yaml#/components/schemas/WebsocketErrorFields'
        - $ref: '../../shared/requests/account_info.yaml#/components/schemas/AccountInfoErrorResponse'
      properties:
        status:
          type: string
          enum:
            - error

    AccountInfoSuccessResponseV1:
      $id: AccountInfoSuccessResponseV1
      properties:
        result:
          type: object
          allOf:
            - $ref: '../../shared/requests/account_info.yaml#/components/schemas/AccountInfoSuccessResponseV1'
        status:
          type: string
          enum:
            - success
      required:
        - status

    AccountInfoSuccessResponseV2:
      $id: AccountInfoSuccessResponseV2
      properties:
        result:
          type: object
          allOf:
            - $ref: '../../shared/requests/account_info.yaml#/components/schemas/AccountInfoSuccessResponseV2'
        status:
          type: string
          enum:
            - success
      required:
        - status
