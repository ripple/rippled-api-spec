components:
  schemas:
    AccountChannelsRequest:
      description: >
        The account_channels method returns information about an account's Payment Channels. 
        This includes only channels where the specified account is the channel's source, not the destination. 
        (A channel's source and owner are the same.) All information retrieved is relative to a particular version of the ledger. 
        Returns an AccountChannelsResponse.
      type: object
      $id: AccountChannelsRequest
      allOf:
        - $ref: '../../shared/requests/account_channels.yaml#/components/schemas/AccountChannelsRequest'
      properties:
        command:
          $ref: '../../shared/base.yaml#/components/schemas/CommandTypes'
          constant: account_channels
        id:
          # Not specifying a type is how we express "any" value is acceptable
          description: 'A unique identifier for the request.'
      required:
        - command
        - id
      example:
        id: 1
        command: account_channels
        account: rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn
        destination_account: ra5nK24KXen9AHvsdFTKHSANinZseWnPcX
        ledger_index: validated

    AccountChannelsResponse:
      type: object
      $id: AccountChannelsResponse
      oneOf:
        - $ref: '#/components/schemas/AccountChannelsErrorResponse'
        - $ref: '#/components/schemas/AccountChannelsSuccessResponse'
      properties:
        id:
          # Not specifying a type is how we express "any" value is acceptable
          description: 'A unique identifier for the request.'
        type:
          type: string
          description: The value response indicates a direct response to an API request. Asynchronous notifications use a different value such as ledgerClosed or transaction.
          enum: # This is the most supported way to define a specific string as the only valid input. `const` is a new keyword which is supported in OpenAPI, but not in all corresponding codegen tools. https://github.com/OAI/OpenAPI-Specification/issues/1313
            - response
      required:
        - id
        - type
      example:
        id: '1'
        type: response
        result:
          account: rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn
          channels:
            - account: rf1BiGeXwwQoi8Z2ueFYTEXSwuJYfV2Jpn
              amount: '1000'
              balance: '0'
              channel_id: C7F634794B79DB40E87179A9D1BF05D05797AE7E92DF8E93FD6656E8C4BE3AE7
              destination_account: ra5nK24KXen9AHvsdFTKHSANinZseWnPcX
              public_key: aBR7mdD75Ycs8DRhMgQ4EMUEmBArF8SEh1hfjrT2V9DQTLNbJVqw
              public_key_hex: 03CFD18E689434F032A4E84C63E2A3A6472D684EAF4FD52CA67742F3E24BAE81B2
              settle_delay: 60
          ledger_hash: 27F530E5C93ED5C13994812787C1ED073C822BAEC7597964608F2C049C2ACD2D
          ledger_index: 71766343
          validated: true
        status: success

    AccountChannelsErrorResponse:
      $id: AccountChanelErrorResponse
      # In AsyncAPI 2.x 'subscribe' is from the api's perspective - so an end user sends a request to
      # a channel where the api is 'subscribed'. This is changed in 3.0.0.
      oneOf:
        - $ref: '../../shared/base.yaml#/components/schemas/WebsocketErrorFields'
        - $ref: '../../shared/requests/account_channels.yaml#/components/schemas/AccountChannelsErrorResponse'
      properties:
        status:
          type: string
          enum:
            - error

    AccountChannelsSuccessResponse:
      $id: AccountChannelsSuccessResponse
      properties:
        result:
          type: object
          allOf:
            - $ref: '../../shared/requests/account_channels.yaml#/components/schemas/AccountChannelsSuccessResponse'
        status:
          type: string
          enum:
            - success
