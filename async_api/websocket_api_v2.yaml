# TODO:
# Simplify this repo to re-use specifications
# Most of the two api's are identical, they just need slightly different formats / keywords in:
# - This file in particular
# - And in the response types

# Conceptually unique things to prototype
# Requests / responses
# Subscriptions
# Submit request (As it will have transaction types as a requirement)

asyncapi: 2.6.0
info:
  title: XRP Ledger Public API
  description: A Websocket API used to query rippled.
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
  version: 2.0.0

servers:
  # TODO: Should this list contain non-ripple servers? All UNL ws_urls? Just public infrastructure?
  mainnet:
    url: wss://s1.ripple.com:51233
    protocol: wss
    description: Mainnet Public API server
  # TODO: Should testnet / devnet / xahau / etc. be on this list?
  testnet:
    url: wss://s.altnet.rippletest.net:51233
    protocol: wss
    description: Testnet (not for production usage)

channels:
  /:
    # In AsyncAPI 2.x 'subscribe' is from the api's perspective - so an end user sends a request to
    # a channel where the api is 'subscribed'. This is changed in 3.0.0.
    subscribe:
      message:
        oneOf:
          - messageId: 'AccountChannelsRequest'
            payload:
              $ref: './requests/account_channels_async_api.yaml#/components/schemas/AccountChannelsRequest'
          - messageId: 'AccountInfoRequest'
            payload:
              $ref: './requests/account_info_async_api.yaml#/components/schemas/AccountInfoRequest'
          # TODO: Add additional request types for individual requests here

    publish:
      message:
        oneOf:
          - messageId: 'AccountChannelsResponse'
            payload:
              $ref: './requests/account_channels_async_api.yaml#/components/schemas/AccountChannelsResponse'
          - messageId: 'AccountInfoResponse'
            payload:
              $ref: './requests/account_info_async_api.yaml#/components/schemas/AccountInfoResponseV2'
          # TODO: Add additional response types for individual requests here
