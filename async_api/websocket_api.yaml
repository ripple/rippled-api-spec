# TODO:
# Simplify this repo to re-use specifications
# Most of the two api's are identical, they just need slightly different formats / keywords in:
# - This file in particular
# - And in the response types

# Conceptually unique things to prototype
# Requests / responses
# Subscriptions
# Submit request (As it will have transaction types as a requirement)

# TODO: (Preserved from original)

asyncapi: '2.6.0'
defaultContentType: application/json
id: urn:xrp-ledger:public-api
tags:
  - name: xrp-ledger
    description: API related to XRP Ledger
info:
  title: XRP Ledger Public API
  contact:
    name: Ripple Dev Support
    url: https://ripple.com/contact
    email: support@ripple.com
  description: A WebSocket API used to query rippled.
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
  version: 1.0.0

servers:
  # TODO: Consider separating public and non-public servers (Preserved from original)
  mainnet:
    url: wss://s1.ripple.com:51233
    protocol: wss
    description: Mainnet Public API server
  testnet:
    url: wss://s.altnet.rippletest.net:51233
    protocol: wss
    description: Testnet (not for production usage)

# Refactored channels section for better reusability
channels:
  # Root channel for all requests and responses
  /:
    description: The root channel for sending requests and receiving responses.
    # Leverages operationId for clarity
    subscribe:
      operationId: subscribeToRoot
      message:
        oneOf:
          # Reusable message references
          - $ref: '#/components/messages/AccountChannelsRequest'
          - $ref: '#/components/messages/AccountInfoRequest'
          - $ref: '#/components/messages/AccountLinesRequest'
          - $ref: '#/components/messages/LedgerEntryRequest'
          - $ref: '#/components/messages/AccountCurrenciesRequest'
          - $ref: '#/components/messages/AccountNftsRequest'
          # ... (Add references for additional requests)
    publish:
      operationId: publishToRoot
      message:
        oneOf:
          - $ref: '#/components/messages/AccountChannelsResponse'
          - $ref: '#/components/messages/AccountInfoResponseV1'
          - $ref: '#/components/messages/AccountLinesResponse'
          - $ref: '#/components/messages/LedgerEntryResponse'
          - $ref: '#/components/messages/AccountCurrenciesResponse'
          - $ref: '#/components/messages/AccountNftsResponse'
          # ... (Add references for additional responses)

# Moved message definitions to a separate components section
components:
  messages:
    # Account channels request message
    AccountChannelsRequest:
      name: AccountChannelsRequest
      messageId: AccountChannelsRequest
      contentType: application/json
      payload:
        $ref: './requests/account_channels_async_api.yaml#/components/schemas/AccountChannelsRequest'

    # Account info request message
    AccountInfoRequest:
      name: AccountInfoRequest
      messageId: AccountInfoRequest
      contentType: application/json
      payload:
        $ref: './requests/account_info_async_api.yaml#/components/schemas/AccountInfoRequest'

    # Account lines request message
    AccountLinesRequest:
      name: AccountLinesRequest
      messageId: AccountLinesRequest
      contentType: application/json
      payload:
        $ref: './requests/account_lines_async_api.yaml#/components/schemas/AccountLinesRequest'

    # Ledger entry request message
    LedgerEntryRequest:
      name: LedgerEntryRequest
      messageId: LedgerEntryRequest
      contentType: application/json
      payload:
        $ref: './requests/ledger_entry_async_api.yaml#/components/schemas/LedgerEntryRequest'

    # Account currencies request message
    AccountCurrenciesRequest:
      name: AccountCurrenciesRequest
      messageId: AccountCurrenciesRequest
      contentType: application/json
      payload:
        $ref: './requests/account_currencies_async_api.yaml#/components/schemas/AccountCurrenciesRequest'

    # Account nfts request message
    AccountNftsRequest:
      name: AccountNftsRequest
      messageId: AccountNftsRequest
      contentType: application/json
      payload:
        $ref: './requests/account_nfts_async_api.yaml#/components/schemas/AccountNftsRequest'

    # ... (Add definitions for additional message types)

    # Account channels response message
    AccountChannelsResponse:
      name: AccountChannelsResponse
      messageId: AccountChannelsResponse
      contentType: application/json
      payload:
        $ref: './requests/account_channels_async_api.yaml#/components/schemas/AccountChannelsResponse'

    # Account info response message (version 1)
    AccountInfoResponseV1:
      name: AccountInfoResponse
      messageId: AccountInfoResponseV1 # Consider using a version suffix
      contentType: application/json
      payload:
        $ref: './requests/account_info_async_api.yaml#/components/schemas/AccountInfoResponseV1'

    # Account lines response message
    AccountLinesResponse:
      name: AccountLinesResponse
      messageId: AccountLinesResponse
      contentType: application/json
      payload:
        $ref: './requests/account_lines_async_api.yaml#/components/schemas/AccountLinesResponse'

    # Ledger entry response message
    LedgerEntryResponse:
      name: LedgerEntryResponse
      messageId: LedgerEntryResponse
      contentType: application/json
      payload:
        $ref: './requests/ledger_entry_async_api.yaml#/components/schemas/LedgerEntryResponse'

    # Account currencies response message
    AccountCurrenciesResponse:
      name: AccountCurrenciesResponse
      messageId: AccountCurrenciesResponse
      contentType: application/json
      payload:
        $ref: './requests/account_currencies_async_api.yaml#/components/schemas/AccountCurrenciesResponse'

    # Account nfts response message
    AccountNftsResponse:
      name: AccountNftsResponse
      messageId: AccountNftsResponse
      contentType: application/json
      payload:
        $ref: './requests/account_nfts_async_api.yaml#/components/schemas/AccountNftsResponse'

    # ... (Add definitions for additional response types)
